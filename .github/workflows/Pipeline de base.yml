name: CI Pipeline de Base

# Déclencheurs du workflow
on:
  # Exécute la pipeline à chaque push sur n'importe quelle branche
  push:
  # Permet de lancer manuellement la pipeline depuis l'interface GitHub
  workflow_dispatch:

jobs:
  # Job unique pour construire et pousser l'image
  build-and-push:
    name: Build and Push Docker Image
    # Utilise la dernière version d'un runner Ubuntu fourni par GitHub
    runs-on: ubuntu-latest
    
    # Définit les permissions nécessaires pour ce job (principe de moindre privilège)
    permissions:
      contents: read      # Requis pour faire le checkout du code
      packages: write      # Requis pour écrire (pousser) sur le registre de paquets GitHub (GHCR)

    steps:
      # Étape 1: Récupérer le code du dépôt
      - name: Checkout repository
        uses: actions/checkout@v4

      # Étape 2: Se connecter au registre de conteneurs de GitHub (GHCR)
      # Utilise le GITHUB_TOKEN automatique pour une authentification sécurisée.
      - name: Log in to the GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Étape 3: Construire et pousser l'image Docker
      # Le tag de l'image est composé du nom du registre, du propriétaire du dépôt,
      # d'un nom d'application fixe ("my-app") et du SHA du commit.
      # Utiliser le SHA garantit que chaque image est unique et traçable.
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/my-app:${{ github.sha }}
