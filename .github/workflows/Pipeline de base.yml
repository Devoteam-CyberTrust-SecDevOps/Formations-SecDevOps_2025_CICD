name: Basic CI/CD Pipeline

# D√©clenchement sur push et pull request
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# Variables d'environnement globales
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  # Job de base avec nom personnalis√©
  build:
    name: Build-NomPrenom-Organisme  # √Ä personnaliser par chaque √©tudiant
    runs-on: ubuntu-latest
    
    # Permissions minimales n√©cessaires
    permissions:
      contents: read
      packages: write
    
    # Outputs pour les jobs suivants
    outputs:
      image_name: ${{ steps.meta.outputs.tags }}
      digest: ${{ steps.build.outputs.digest }}
      image_uri: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
    
    steps:
    # 1. Checkout du code source
    - name: Checkout repository
      uses: actions/checkout@v4
    
    # 2. Configuration Docker Buildx (pour builds avanc√©s)
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    # 3. Authentification au GitHub Container Registry
    - name: Login to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}  # Token automatique GitHub
    
    # 4. Extraction des m√©tadonn√©es (tags, labels)
    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}
    
    # 5. Build et push de l'image Docker
    - name: Build and push Docker image
      id: build
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        # Cache pour optimiser les builds suivants
        cache-from: type=gha
        cache-to: type=gha,mode=max
    
    # 6. Affichage des informations de build
    - name: Display build info
      run: |
        echo "‚úÖ Image construite avec succ√®s !"
        echo "üì¶ Tags: ${{ steps.meta.outputs.tags }}"
        echo "üîí Digest: ${{ steps.build.outputs.digest }}"
        echo "üåê Registry: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}"
